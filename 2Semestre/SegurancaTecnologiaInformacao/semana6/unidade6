UNIDADE 06
Criptografia sim√©trica e assim√©trica
Nesta Unidade, iremos estudar os mecanismos de criptografia sim√©tricos e assim√©tricos. Conheceremos os elementos fundamentais da criptografia sim√©trica. Ainda, iremos nos aprofundar nos principais algoritmos de criptografia sim√©trica, tais como o algoritmo DES, Triplo DES e AES. Adicionalmente, demonstraremos o processo de distribui√ß√£o chave sim√©tricas de forma segura. Na sequ√™ncia, vamos apresentar os princ√≠pios de cifra√ß√£o assim√©trica, os elementos envolvidos na criptografia de chave p√∫blica. Tamb√©m, iremos apresentar os principais algoritmos de cifra√ß√£o de chave p√∫blica, o algoritmo RSA, Diffie-Hellman, DSS e as Curvas el√≠pticas. Al√©m de ressaltar as vantagens e desvantagens de cada tipo de criptografia, vamos mostrar as principais aplica√ß√µes que utilizam estes dois tipos de criptografia, tais como assinatura digital, autentica√ß√£o de mensagens, certificados de chave p√∫blica, envelopes digitais, entre outras. Estaremos tamb√©m conhecendo o processo de distribui√ß√£o de chave p√∫blica de forma segura, utilizando diret√≥rios de chave p√∫blica, an√∫ncio p√∫blico, autoridades e certificados de chave p√∫blica. Por fim, demonstraremos como associar diferentes algoritmos de criptografia para obter um mecanismo mais seguro.

Princ√≠pios de Cifra√ß√£o Sim√©trica
A cifra√ß√£o sim√©trica, tamb√©m conhecida como criptografia de chave secreta, era o √∫nico tipo de m√©todo de cifra√ß√£o utilizado antes da inser√ß√£o da criptografia de chave p√∫blica no final da d√©cada de 1970. Esse m√©todo de criptografia ainda continua sendo amplamente utilizado.  

Para compreender a criptografia sim√©trica primeiramente vamos definir alguns termos fundamentais. A mensagem original √© conhecida como texto claro, ao passo que uma mensagem codificada √© denominada como texto cifrado. Neste sentido, a a√ß√£o de modificar um texto claro em um texto cifrado √© chamado de cifra√ß√£o; por sua vez o processo de restaurar o texto claro a partir do texto cifrado √© conhecido como decifra√ß√£o.  

O estudo dos diversos m√©todos e procedimentos utilizados para cifragem/decifragem constituem a √°rea de seguran√ßa conhecida como criptografia. Cada um desses m√©todos ou procedimentos √© denominado como sistema criptogr√°fico ou mais comumente chamado de cifra. Os m√©todos utilizados para decifrar um texto cifrado sem haver qualquer conhecimento dos detalhes do algoritmo de cifra√ß√£o estabelecem a √°rea de criptoan√°lise. Por fim, a associa√ß√£o entre as √°reas de criptografia e criptoan√°lise s√£o denominadas como criptologia.  

Um m√©todo de criptografia sim√©trica possui cinco elementos fundamentais: 

Texto √†s claras: √© a mensagem original que √© atribu√≠da como entrada para o algoritmo de criptografia. 

Algoritmo de cifra√ß√£o: √© um algoritmo matem√°tico que executa v√°rias substitui√ß√µes e transforma√ß√µes no texto √†s claras para gerar o texto cifrado. 

Chave secreta: a chave secreta √© um segundo elemento de entrada para o algoritmo de cifra√ß√£o. Esta chave √© um valor individual que n√£o depende nem do texto claro e nem do algoritmo de cifragem. Para cada chave secreta o algoritmo de cifra√ß√£o produzir√° uma sa√≠da diferente (texto cifrado). As substitui√ß√µes e transforma√ß√µes que ser√£o realizadas pelo algoritmo dependem exclusivamente da chave utilizada. 

Texto cifrado: √â a mensagem codificada produzida como sa√≠da. Esta mensagem √© embaralhada, ela depende do texto √†s claras e da chave secreta. Destaca-se que uma mensagem cifrada com duas chaves diferentes ir√° gerar dois textos cifrados distintos. 

Algoritmo de decifra√ß√£o: √© um algoritmo matem√°tico que executa o algoritmo de cifragem de maneira inversa, ou seja, ele recebe como entrada o texto cifrado e a chave secreta e produz o texto original. 

A Figura abaixo disp√µe do modelo de criptografia sim√©trica. 


Fonte: Autor
Existem dois requisitos que devem ser atendidos para utiliza√ß√£o da cifra√ß√£o sim√©trica de forma segura: 

Adotar um algoritmo de cifra√ß√£o forte. O algoritmo deve ser robusto o suficiente para impedir que o advers√°rio que conhe√ßa o algoritmo e tenha acesso a um ou mais textos cifrados, n√£o seja capaz de decifrar o texto cifrado ou adivinhar a chave secreta.  

O emissor e receptor de uma mensagem deve obter c√≥pias da chave secreta de maneira segura e preserv√°-las em seguran√ßa. Pois, qualquer indiv√≠duo que conseguir acesso √† chave e descobrir o algoritmo utilizado, ter√° acesso a toda comunica√ß√£o realizada com essa chave. 

 

Em geral, existem basicamente duas abordagens que os advers√°rios utilizam para atacar um esquema de criptografia sim√©trica. O primeiro √© o ataque de criptoan√°lise, neste ataque o advers√°rio explora a natureza do algoritmo, al√©m das caracter√≠sticas gerais do texto √†s claras e amostras em pares - amostras do texto √†s claras e o mesmo texto cifrado. Este ataque explora as caracter√≠sticas do algoritmo para tentar decifrar um texto √†s claras espec√≠fico ou deduzir qual a chave secreta que foi utilizada. Caso o ataque seja bem-sucedido na dedu√ß√£o da chave, isto poder√° gerar um efeito desastroso em cascata, pois todas as mensagens que foram cifradas com esta chave ser√£o comprometidas, incluindo as mensagens transmitidas anteriormente e as mensagens a serem enviadas.  

A segunda t√©cnica, √© a utiliza√ß√£o de um ataque de for√ßa bruta. Tratando-se do cen√°rio de criptografia sim√©trica este ataque consiste em utilizar todas as chaves secretas poss√≠veis em uma amostra de texto cifrado at√© conseguir ter acesso ao texto √†s claras. Uma estimativa denota que em m√©dia √© necess√°rio testar metade de todas as chaves secretas poss√≠veis para obter sucesso neste ataque. Conforme exposto por Stallings √© necess√°rio 1ms para executar uma √∫nica tentativa de decifra√ß√£o [Stallings,2014], considerando um computador atual com uma configura√ß√£o razo√°vel. Abaixo uma tabela contendo o estudo realizado pelo autor, na tabela √© apresentado o tempo m√©dio para decifrar uma mensagem considerando tamanho de chaves diferentes. 

Tamanho da chave (bits) 

N√∫mero de chaves poss√≠veis 

Tempo requerido 

em 1 decifra√ß√£o/ùùÅs

Tempo requerido em 10 decifra√ß√µes/ ùùÅs

32

232=4,3‚àó109" id="MathJax-Element-4-Frame" tabindex="0">  232 = 4,3‚àó109 

231 ùúá" id="MathJax-Element-5-Frame" tabindex="0">  231    ùúá  s * 35,8 minutos
2,15 milissegundos

56

256=7,2‚àó1016" id="MathJax-Element-6-Frame" tabindex="0">  256 = 7,2‚àó1016 

255 ùúá" id="MathJax-Element-7-Frame" tabindex="0"> 
Math input error
55  ùúá  s = 1142 anos 
10,01 horas

128

2128=3,4‚àó1038" id="MathJax-Element-3-Frame" tabindex="0">  2128 = 3,4‚àó1038 

2127 m" id="MathJax-Element-8-Frame" tabindex="0">  2127 m  s = 5,4 *  224" id="MathJax-Element-12-Frame" tabindex="0">  224   anos
5,4 * 11018" id="MathJax-Element-11-Frame" tabindex="0">  018  anos

168

2168=3,7‚àó1050" id="MathJax-Element-9-Frame" tabindex="0">  2168 = 3,7‚àó1050 

2127 ùúá" id="MathJax-Element-10-Frame" tabindex="0">  2127    ùúá s = 5,9 * 1036" id="MathJax-Element-13-Frame" tabindex="0">  1036  anos

5,9 * 11030" id="MathJax-Element-14-Frame" tabindex="0">  030  anos

26 caracteres (permuta√ß√£o) 

26!=4‚àó1026" id="MathJax-Element-15-Frame" tabindex="0">  26! = 4‚àó1026 

2‚àó1026 ùúá" id="MathJax-Element-17-Frame" tabindex="0">  2 ‚àó 1026    ùúá s = 6,4 * 1012" id="MathJax-Element-16-Frame" tabindex="0">  1012  anos

6,4 * 106" id="MathJax-Element-18-Frame" tabindex="0">  106  anos



Ressalta-se que com a utiliza√ß√£o de processamento paralelo √© poss√≠vel reduzir consideravelmente o tempo necess√°rio para "quebrar uma chave". Observe que na √∫ltima coluna da tabela est√° sendo apresentado o de um sistema que √© capaz de processar um milh√£o de chaves por microssegundo. Consequentemente, uma chave de 56 bits n√£o deve ser mais considerada segura. 

Algoritmos de Criptografia Sim√©trica
Os algoritmos de criptografia sim√©trica mais utilizados s√£o as cifras de bloco. A cifra de bloco processa o texto √†s claras fornecido como entrada utilizando blocos de tamanho fixo, como resultado gera um bloco de texto cifrado de tamanho igual para cada um dos blocos de texto √†s claras. Este algoritmo processa as sequ√™ncias de caracteres mais longas de texto √†s claras como sendo uma s√©rie de blocos de tamanho fixo. Entre os algoritmos sim√©tricos mais importantes destacam-se o Data Encryption Standard (DES), o Triple DES (DES triplo) e o Advanced Encryption Standard (AES). 


Data Encryption Standard 
O algoritmo Data Encryption Standard (DES) √© um dos principais algoritmos de chave sim√©trica, foi desenvolvido pela IBM em 1971, tornou-se um padr√£o adotado pelo NIST1 (National Institute of Standards and Technology) em 1977, ent√£o publicado na FIPS PUB 46 (Federal Information Processing Standard).    


CURIOSIDADE
NIST (National Institute of Standards and Technology) em 1977 ainda era conhecido como National Bureau of Standards (Escrit√≥rio Nacional de Padr√µes)
 
Este algoritmo tamb√©m ficou conhecido como algoritmo de cifra√ß√£o de dados, termo advindo do ingl√™s DEA (Data Encryption Algorithm). O algoritmo recebe como entrada um bloco de texto √†s claras de 64 bits e uma chave secreta composta por 56 bits, como resultado gera um bloco cifrado de 64 bits. 

A utiliza√ß√£o do algoritmo DES institui duas grandes preocupa√ß√µes, relacionadas a implementa√ß√£o do algoritmo em si e outra relativo √† utiliza√ß√£o de uma chave de 56 bits. A primeira preocupa√ß√£o refere-se a explorar as caracter√≠sticas do algoritmo utilizando t√©cnicas de criptoan√°lise. Destaca-se que o algoritmo DES foi intensamente estudado, ao longo dos anos foram realizadas numerosas tentativas de encontrar fraquezas neste algoritmo. Apesar de in√∫meras abordagens, n√£o foi reportado nenhuma fraqueza cr√≠tica. 

Por√©m, em julho de 1998 o algoritmo DES mostrou ser inseguro, quando a Electronic Frontier Foundation (EFF) anunciou que havia decifrado uma cifra√ß√£o DES em uma m√°quina especializada, denominada DES cracker. Dado a evolu√ß√£o do hardware, os computadores desempenham um n√∫mero maior de atividades em um menor tempo, os microprocessadores est√£o cada vez mais r√°pidos, o que torna o algoritmo DES praticamente inadequado. 


CURIOSIDADE
DES cracker ‚Äì m√°quina denominada como decifradora DES, constru√≠da por250 mil d√≥lares na √©poca.
 
Destaca-se que um ataque de for√ßa bruta destinado a busca de chave envolve mais do que somente executar todas as chaves poss√≠veis. O analista deve ser capaz de reconhecer o texto √†s claras ap√≥s a decripta√ß√£o, ou seja, seu conte√∫do deve ser compreens√≠vel. Quando a mensagem for composta por apenas texto √†s claras em um determinado idioma, o resultado ser√° imediato, sendo apenas necess√°rio reconhecer o idioma de forma automatizada. Por√©m, se o texto for comprimido antes de realizar a cifra√ß√£o, o processo de reconhecimento possui um grau maior de complexidade. Ainda, tratando-se de uma mensagem contendo um tipo de dado mais espec√≠fico, como o c√≥digo de alguma linguagem de programa√ß√£o ou arquivo num√©rico, e se este arquivo for comprimido, a t√©cnica torna-se muito mais dif√≠cil de ser automatizada. 

  Deste modo, ser√° necess√°ria uma abordagem complementar ao ataque de for√ßa bruta, sendo preciso um certo grau de conhecimento sobre o texto √†s claras e uma forma de distinguir automaticamente se a mensagem cifrada retornou ao formato original. A estrat√©gia adotada pela EFF trata exatamente este contexto, e ainda apresenta v√°rias t√©cnicas automatizadas que poderiam ser utilizadas em diferentes cen√°rios.   

Uma contramedida para mitigar o ataque de for√ßa bruta realizado ao algoritmo de cifra√ß√£o, seria adotar chaves mais longas. Considerando a tecnologia atual podemos realizar uma estimativa, caso a decifradora conseguisse executar um milh√£o de decifra√ß√µes por milissegundos, ent√£o um c√≥digo DES poderia ser "quebrado" em torno de 10 horas. Tendo em mente o aumento da velocidade de aproximadamente sete vezes em rela√ß√£o a tecnologia utilizada na decifradora da EFF. Considerando este cen√°rio, para quebrar uma chave de 128 bits seria necess√°rio mais de 1018 anos. Os resultados demostram que atualmente utilizar um ataque de for√ßa bruta sobre um algoritmo que utiliza uma chave de 128 bits √© impratic√°vel. 

Triple Data Encryption Standard
A algoritmo DES foi utilizado como base para estruturar o algoritmo triplo DES (3DES), que na verdade n√£o √© nada mais que a implementa√ß√£o do algoritmo DES tradicional repetido tr√™s vezes, utilizando duas ou ainda tr√™s distintas, gerando um tamanho de chave de 112 ou 168 bits respectivamente. O triplo DES foi padronizado em 1985 como padr√£o ANSI X9.17, sendo ent√£o bastante utilizado em aplica√ß√µes financeiras. Ent√£o, em 1999 foi adicionado ao FIPS PUB 46-3 como sendo uma parte do DES. 

O triplo DES traz duas caracter√≠sticas bastante relevantes que asseguram seu uso para os pr√≥ximos anos. A primeira caracter√≠stica est√° relacionada ao comprimento da chave, com uma chave de 168 bits o triplo DES consegue superar as vulnerabilidades impostas pelo ataque de for√ßa bruta no DES. A segunda caracter√≠stica √© que o algoritmo de cifragem inclu√≠do dentro do triplo DES √© o mesmo que inserido no DES. 

Esse algoritmo mais do que qualquer outro algoritmo de cifra√ß√£o foi submetido a ataques de criptoan√°lise, por√©m nenhum ataque efetivo foi encontrado, a n√£o ser o ataque de for√ßa bruta que levaria milh√µes de anos para ser "quebrado". Existe um alto n√≠vel de confian√ßa da resist√™ncia do algoritmo triplo DES em rela√ß√£o aos ataques de criptoan√°lise. Na sele√ß√£o de um algoritmo de cifragem, se a seguran√ßa fosse o √∫nico aspecto a ser avaliado, com certeza o triplo DES seria uma escolha conveniente. 

Contudo o triplo DES possui desvantagens, a principal √© que este algoritmo acaba sendo extremamente lento em software. O algoritmo DES foi projetado em hardware na d√©cada de 1970, por√©m n√£o apresentava um c√≥digo em software eficiente. Por sua vez, o triplo DES necessita de tr√™s vezes mais processamento, consequentemente muito mais lento. Outra desvantagem, apresentada tanto no DES como no triplo DES, ambos utilizam um tamanho de bloco de 64 bits. Levando em considera√ß√£o tanto a efici√™ncia como a seguran√ßa, trabalhar com tamanho de blocos maiores √© apreci√°vel. 


Advanced Encryption Standard 
Observando as desvantagens anteriormente apresentadas, o triplo DES n√£o √© um forte candidato para ser utilizado a longo prazo. Neste sentido, em 1997 o NIST publicou uma chamada para cria√ß√£o de novo algoritmo de cifra√ß√£o, o novo algoritmo deveria ter um n√≠vel de seguran√ßa equivalente ou superior ao 3DES e uma efici√™ncia que fosse expressivamente melhor. Ainda, o NIST especificou que o novo algoritmo deveria ter uma cifra de bloco com comprimento de blocos de 128 bits, e forneceria suporte para chaves de 128, 192 e 256 bits. Conforme estabelecido pelo NIST, os crit√©rios de avalia√ß√£o contemplavam a seguran√ßa, efici√™ncia computacional do algoritmo, consumo de mem√≥ria, flexibilidade, algoritmo ajust√°vel (hardware e software). 

Na primeira etapa da avalia√ß√£o foram selecionados 15 algoritmos de cifragem. Em uma segunda rodada, dos 15 algoritmos foram selecionados apenas 5 algoritmos. Por fim, em novembro de 2001 o NIST finalizou o processo de avalia√ß√£o, selecionando o algoritmo de Rijndael como padr√£o final. Este algoritmo foi denominado Advanced Encryption Standard (AES). O AES foi ent√£o publicado no FIPS PUB 197, atualmente este algoritmo est√° amplamente presente em diversos produtos comerciais. 


Distribui√ß√£o de Chave Sim√©trica 
Conforme mencionado, os algoritmos de criptografia sim√©tricos utilizam a mesma chave tanto para cifrar como para decifrar. A chave secreta √© compartilhada entre duas ou mais partes. Destaca-se que a chave secreta deve ser a mesma, tanto para a cifragem quanto para decifragem. 

Considerando que a chave √© de uso compartilhado e deve ser mantida em segredo pelas duas partes envolvidas na comunica√ß√£o, para utilizar a criptografia sim√©trica, √© essencial existir um canal para permitir a troca de forma segura das chaves entre as partes envolvidas na comunica√ß√£o. Ressalta-se que na criptografia sim√©trica a necessidade de compartilhar a chave secreta com cada parceiro √© o que imp√µem a sua maior fragilidade. Tendo em vista, que a transmiss√£o das chaves entre os envolvidos pode n√£o ser realizada de forma segura, e esta chave pode acabar de posse de um indiv√≠duo mal-intencionado. 

A figura a seguir mostra um outro problema da criptografia sim√©trica, a distribui√ß√£o das chaves. Onde, cada usu√°rio ter√° de armazenar e gerenciar o n√∫mero de chaves de acordo com a quantidade de pessoas com as quais ele se comunica. Por exemplo, conforme disposto na figura, Alice tem duas chaves compartilhadas, uma para se comunicar com Bob e outra para se comunicar com Ted. Se Alice quiser trocar mensagens com John de forma confidencial, ela precisar√° adquirir e gerenciar mais uma chave. 


Fonte: Autor
Neste sentido, dois grandes problemas necessitam ser avaliados tratando-se de criptografia sim√©trica: 

Transmitir a chave secreta de uma forma segura e confi√°vel entre as duas partes envolvidas na comunica√ß√£o. 

Administrar o problema da distribui√ß√£o de um n√∫mero consider√°vel de chaves (armazenar uma chave para cada comunica√ß√£o distinta).  


Centro de Distribui√ß√£o de Chaves (KDC) 
De acordo com o que estudamos, uma das grandes limita√ß√µes da criptografia sim√©trica √© justamente a distribui√ß√£o das chaves secretas. Como podemos distribuir a chave secreta de maneira segura entre a duas partes. Para tal, podemos utilizar um intermedi√°rio de confian√ßa denominado como centro de distribui√ß√£o de chaves, ou do termo ingl√™s KDC (Key Distribution Center). O KDC √© considerado uma entidade de confian√ßa na rede com quem o usu√°rio estabelece uma chave secreta compartilhada, a partir desta entidade os usu√°rios podem obter as chaves compartilhadas necess√°rias para uma comunica√ß√£o segura com os demais usu√°rios da rede, evitando assim algumas estrat√©gias do advers√°rio para capturar a chave secreta. 

A figura a seguir mostra duas partes, Alice e Bob, tentando estabelecer uma comunica√ß√£o segura utilizando o KDC. Para isto, a seguinte sequ√™ncia de passos √© realizada: 

Alice solicita ao KDC que deseja se comunicar com Bob. 

O KDC envia uma chave a Alice. 

O KDC envia a mesma chave a Bob. 

A chave que Alice e Bob receberam permitem estabelecer uma comunica√ß√£o de forma segura, os dados s√£o cifrados com a chave que foi enviada pelo KDC. 


Fonte: Autor
Visando garantir que realmente a chave foi concedida pelo KDC, ele fornece uma chave secreta sim√©trica diferente para cada um dos seus usu√°rios cadastrados. Sendo esta chave criado no servidor no instante que o usu√°rio se cadastra no KDC. Deste modo, o KDC conhece a chave que foi distribu√≠da para cada usu√°rio, o que permite que o usu√°rio e o KDC se comuniquem com seguran√ßa. 

Na figura abaixo demonstramos o processo para estabelecer a comunica√ß√£o entre duas partes. 


Fonte: Autor
Considerando que Alice e Bob s√£o usu√°rios do KDC, eles conhecem somente a chave secreta com o KDC. Alice deseja iniciar a comunica√ß√£o. 

Ent√£o Alice, utiliza sua chave secreta para se comunicar com o KDC, diz que deseja se comunicar com Bob. 

O KDC recebe a mensagem de Alice, neste momento o KDC tem certeza da origem da mensagem, sendo que apenas Alice possui esta chave secreta que eles compartilham. 

O KDC ent√£o decifra a mensagem enviada por Alice, verifica a inten√ß√£o de Alice de se comunicar com Bob. Ent√£o, na sequ√™ncia o KDC cria uma chave para que Alice e Bob possam estabelecer esta comunica√ß√£o. Esta chave √© denominada como "chave de sess√£o". A chave de sess√£o ser√° utilizada para estabelecer a comunica√ß√£o uma √∫nica vez, ou seja, uma √∫nica sess√£o de comunica√ß√£o. Ap√≥s o KDC criar a chave ele necessita enviar esta chave para Alice e Bob. 

Para enviar a chave de sess√£o para Alice, o KDC cifra a chave de sess√£o utilizando a chave secreta que √© compartilhada exclusivamente com Alice. 

Para enviar a chave de sess√£o para Bob, o KDC cifra a chave de sess√£o utilizando a chave secreta que √© compartilhada exclusivamente com Bob.  

Ap√≥s Alice e Bob receberem suas mensagens, eles decifram a mensagem utilizando a chave secreta que cada um deles compartilha com o KDC. Ao decifrar a mensagem Alice e Bob ter√£o acesso a chave de sess√£o para se comunicar. Agora toda comunica√ß√£o realizada entre Alice e Bob deve ser cifrada utilizando a chave de sess√£o. 

Utilizando a criptografia sim√©trica, distribuindo a chave secreta por meio do KDC, conseguimos garantir as seguintes propriedades de seguran√ßa: 

Confidencialidade: somente Alice e Bob conseguem decifrar as mensagens cifradas com a chave de sess√£o. 

Autenticidade: quando Alice recebe uma mensagem cifrada com a chave de sess√£o, ela sabe exatamente com quem a chave √© compartilhada, neste caso com Bob, j√° que apenas Bob conhece essa chave. Da maneira similar, quando Bob recebe uma mensagem cifrada com chave de sess√£o que compartilha com Alice, ele sabe exatamente que a mensagem foi enviada por Alice. 

N√£o Rep√∫dio: sendo que a chave de sess√£o √© apenas compartilhada entre Alice e Bob eles n√£o poder√£o negar a autoria da mensagem, ou seja, negar que foi um deles que enviou uma mensagem cifrada com a chave de sess√£o que apenas ambos compartilham.  


Hierarquia de Chaves 
O uso de um KDC depende de uma estrutura de hierarquia de chaves. A hierarquia de chaves permite conceder n√≠veis diferentes de criptografia para as chaves. O KDC necessita de no m√≠nimo dois n√≠veis de chaves. Em geral, a comunica√ß√£o realizada entre os sistemas finais √© cifrada utilizando uma chave tempor√°ria, a chave de sess√£o. Geralmente, a chave de sess√£o √© utilizada dentro da dura√ß√£o de tempo fornecida por uma conex√£o l√≥gica, tal como uma conex√£o de transporte. Ap√≥s o tempo de dura√ß√£o a chave de sess√£o perde sua validade e ent√£o √© descartada. A chave de sess√£o √© obtida a partir do KDC sob a mesma infraestrutura de rede utilizada para comunica√ß√£o do usu√°rio final. A figura abaixo mostra a representa√ß√£o adaptada da hierarquia de chaves proposta por Stallings [Stallings,2008].  


Fonte: Adaptada de Stallings
Na sequ√™ncia, a chave deve ser transmitida ao usu√°rio final de maneira cifrada para que uma terceira parte n√£o tenha acesso a chave de sess√£o. Para cifrar a chave de sess√£o deve ser utilizado uma chave mestra, a chave criada pelo KDC assim que o usu√°rio √© cadastrado. 

N√£o √© necess√°rio centralizar a distribui√ß√£o de chaves em um √∫nico KDC. Em redes maiores pode n√£o ser vi√°vel fazer isso. Alternativamente, √© poss√≠vel estabelecer uma hierarquia de KDC. Por exemplo, √© poss√≠vel distribuir os KDC's locais, cada qual fica respons√°vel por um determinado dom√≠nio ou subdom√≠nio.  

Assim, o KDC local fica respons√°vel por distribuir as chaves dentro do dom√≠nio local para entidades que foram ali cadastradas. Contudo, caso duas entidades associados a dom√≠nios diferentes desejem se comunicar, ent√£o os KDC¬¥s locais podem se comunicar com um KDC global a fim provisionar uma chave de sess√£o para que as partes consigam se comunicar de forma segura. Neste sentido, qualquer um dos tr√™s KDC¬¥s pode realmente gerir a chave. O conceito hier√°rquico pode ser estendido a tr√™s ou mais camadas, dependendo do tamanho da rede e da quantidade de usu√°rios. 

O esquema hier√°rquico permite reduzir o efeito associado √† distribui√ß√£o da chave mestra, tendo em vista a grande quantidade das chaves mestras que ser√£o compartilhadas por um KDC local com suas respectivas entidades. Adicionalmente, este esquema permite restringir a abrang√™ncia do dano causado por KDC defeituoso tendo impacto apenas na sua √°rea local. 


Princ√≠pios de Cifra√ß√£o Assim√©trica 
O conceito de cifra√ß√£o assim√©trica, amplamente conhecido como criptografia de chave p√∫blica evoluiu da tentativa de resolver dois problemas complexos associados a cifra√ß√£o sim√©trica. O primeiro, j√° mencionado, √© o problema relacionado a distribui√ß√£o de chaves. Conforme discutido, a distribui√ß√£o de chaves de uma abordagem utilizando cifra√ß√£o sim√©trica necessita que as duas partes comunicantes compartilhem uma chave que lhes foi atribu√≠da anteriormente. Consequentemente, sendo necess√°rio o uso de KDC. Um outro requisito foi abordado por Whitfield Diffie e Martin Hellman, criadores do algoritmo de cifra√ß√£o de chave p√∫blica. Consideraram um aspecto que anulava a pr√≥pria natureza da criptografia: a capacidade de conservar o segredo absoluto sobre a pr√≥pria comunica√ß√£o. Conforme exposto por Diffie ‚Äúafinal, qual seria a vantagem de desenvolver criptossistemas impenetr√°veis, se seus usu√°rios fossem for√ßados a compartilhar suas chaves com um KDC que poderia ser comprometido por roubo ou suborno?‚Äù [Diffie,1988]. 

O segundo problema refletido por Diffie foi a das assinaturas digitais. Prevendo o uso da criptografia n√£o apenas para fins militares, vislumbrando atender demandas comerciais e particulares, constatou que as mensagens e documentos digitais precisariam de algo que fosse equivalente √†s assinaturas manuscritas nos documentos em papel. Idealizou a cria√ß√£o de um m√©todo que fosse capaz de satisfazer todas as partes, e afirmar que uma mensagem no meio digital tenha sido enviada por determinado indiv√≠duo.  

Investindo sobre a resolu√ß√£o destes dois problemas, Diffie e Hellman projetaram um algoritmo revolucion√°rio no campo da criptografia, propuseram um m√©todo de cifragem para trocas de chaves de maneira segura realizado em um canal p√∫blico. Este algoritmo foi publicado em 1976, denominado como m√©todo de troca de chaves de Diffie-Hellman. Considerado um dos primeiros exemplos pr√°ticos de m√©todos de troca de chaves implementado dentro da √°rea de criptografia, propulsor da criptografia de chave p√∫blica. 


Fundamentos de Cifra√ß√£o Assim√©trica 
Os algoritmos de criptografia assim√©tricos trabalham com duas chaves, uma para cifragem dos dados e uma segunda chave para decifragem dos dados. Tais algoritmos possuem uma caracter√≠stica significativa, √© computacionalmente invi√°vel especificar a chave de decifragem utilizando apenas o conhecimento do algoritmo e chave de cifragem. Outra caracter√≠stica adicional, espec√≠fica do algoritmo RSA √© a de que qualquer umas das duas chaves podem ser utilizadas para cifragem, como resultado a outra chave deve ser utilizada para decifragem. 

A abordagem de criptografia de chave p√∫blica disp√µe de cinco elementos: 

Texto √†s claras: corresponde √† mensagem ou aos dados em formato leg√≠vel que s√£o disponibilizados como entrada para o algoritmo. 

Algoritmo de cifra√ß√£o: √© um algoritmo matem√°tico que realiza v√°rias opera√ß√µes e transforma√ß√µes no texto √†s claras. 

Chaves p√∫blica e privada: corresponde a um par de chaves secretas, selecionadas de tal modo que se uma das chaves for utilizada para cifrar a outra √© utilizada para decifrar. As transforma√ß√µes espec√≠ficas realizadas pelo algoritmo, variam de acordo com a chave p√∫blica ou chave privada que foi concedida como entrada para o algoritmo.   

Texto cifrado: √© a mensagem codificada produzida como sa√≠da. Esta mensagem √© embaralhada, ela depende do texto √†s claras e da chave secreta que foi utilizada. Destaca-se que duas chaves diferentes produzir√£o como resultado dois textos cifrados distintos. 

Algoritmo de decifra√ß√£o: √© um algoritmo matem√°tico que recebe como entrada o texto cifrado e a chave correspondente e produz como resultado a mensagem original, ou seja, o texto √†s claras. 

Na figura abaixo √© demostrado um esquema t√≠pico de criptografia de chave p√∫blica: 


Fonte: Autor
As etapas fundamentais s√£o demostradas as seguir:

Cada usu√°rio deve conceber um par de chaves que ser√° utilizado para o processo de cifragem e decifragem das mensagens.
O usu√°rio deve alocar uma das duas chaves em um registrador p√∫blico ou utilizar outro meio para disponibilizar esta chave, esta chave √© denominada como chave p√∫blica. A outra chave deve ser mantida em seguran√ßa, esta chave √© denominada como chave privada. Adicionalmente, cada usu√°rio mant√©m um conjunto de chaves p√∫blicas de outros usu√°rios.
Caso Alice deseje enviar uma mensagem secreta para Bob, ela cifra a mensagem utilizando a chave p√∫blica de Bob.
Quando Bob receber a mensagem, ele utiliza a chave privada para decifrar a mensagem. Destaca-se que nenhum outro indiv√≠duo conseguir√° decifrar a mensagem, pois somente Bob conhece a chave privada.
Utilizando esta t√©cnica, todos os envolvidos podem ter acesso √†s chaves p√∫blicas. Ressalta-se que as chaves privadas s√£o geradas localmente por cada uma das partes envolvidas, e essas chaves n√£o podem ser distribu√≠das. A chave privada deve ser protegida e secreta, isto vai garantir que a comunica√ß√£o realizada entre as partes esteja protegida. Outro fator interessante √© a possibilidade de renovar as chaves sempre que necess√°rio, a qualquer momento um sistema poder√° modificar a chave privada e redistribuir uma nova chave p√∫blica. 


Algoritmos de Chave P√∫blica 
Nesta se√ß√£o vamos explorar alguns dos principais algoritmos assim√©tricos utilizados atualmente, o algoritmo RSA, Diffie-Hellman, DSS e as curva el√≠pticas.  


Algoritmo RSA 
O RSA foi um dos primeiros algoritmos de cifra√ß√£o assim√©trica, desenvolvido em 1977 por Ron Rivest, Adi Shamir e Len Adleman pesquisadores do MIT (Instituto de Tecnologia de Massachusetts), ent√£o publicado em 1978 [Rivest et al., 1978]. O algoritmo foi denominado como RSA dado a composi√ß√£o da inicial do nome dos autores. Este esquema de criptografia de chave p√∫blica tem sido amplamente aceito e utilizado at√© os dias de hoje. O RSA √© estruturado por uma cifra de bloco onde o texto √†s claras e o texto cifrado corresponde a um n√∫mero inteiro entre 0 e n - 1, definido algum valor a n. 

Em 1977, em uma publica√ß√£o da revista Scientific American, os autores do algoritmo RSA desafiaram seus leitores a decifrar um texto cifrado que foi divulgado na coluna "Jogos matem√°ticos". Os autores do algoritmo proporcionaram uma recompensa de 100 d√≥lares para quem conseguisse retornar o conte√∫do da mensagem em texto √†s claras. Evento que os autores mensuraram que s√≥ poderia ocorrer daqui aproximadamente 40 quatrilh√µes de anos.  


CURIOSIDADE
Quatrilh√µes ‚Äì n√∫mero equivalente a mil bilh√µes, representado por 1015.
 
Por√©m, em 1994 um grupo na internet empenhou-se em decifrar a mensagem, foram utilizados mais de 1600 computadores, ent√£o com somente oito meses de trabalho foi reivindicado o pr√™mio [Leutwyler,1994]. Neste desafio foi utilizado um tamanho de chave de aproximadamente 428 bits de comprimento. Ressalta-se que este resultado n√£o anula a utiliza√ß√£o do algoritmo RSA, somente enfatiza a necessidade de utilizar chaves com comprimento maiores. Atualmente, as aplica√ß√µes utilizam um tamanho de chave de 1024 bits que √© considerado um tamanho adequado e uma chave robusta para maioria dos cen√°rios.  


Acordo de chaves de Diffie-Hellman 
O algoritmo de Diffie-Hellman foi conhecido como o primeiro algoritmo de chave p√∫blica, publicado em 1976. Este algoritmo tamb√©m √© conhecido como troca de chaves ou acordo de chaves de Diffie-Hellman. Existem uma quantidade consider√°vel de produtos no √¢mbito comercial que utilizam as t√©cnicas empregadas no algoritmo de troca de chaves. 

O prop√≥sito do algoritmo √© permitir que dois indiv√≠duos cheguem em um consenso de como compartilhar um segredo de forma segura, permitindo que este segredo seja utilizado posteriormente como chave secreta em uma aplica√ß√£o de criptografia sim√©trica na troca das mensagens. Este algoritmo limita-se somente √† troca das chaves secretas. 


Digital Signature Standard
O algoritmo Digital Signature Standard foi proposto em 1991, publicado pelo NIST em 1994 no FIPS PUB 186, tamb√©m conhecido como padr√£o de assinatura digital. Este algoritmo faz uso da fun√ß√£o hash criptogr√°fica SHA-1 e ainda prop√µe uma abordagem inovadora para assinatura digital, o algoritmo de assinatura digital conhecido como DSA (Digital Signature Algorithm). 

Devido algumas men√ß√µes p√∫blicas sobre a seguran√ßa do DSS, o algoritmo foi revisado em 1993. Posteriormente, em 1996 houve uma pequena revis√£o no algoritmo. O algoritmo DSS foi estruturado apenas para fornecer a fun√ß√£o de assinatura digital, ou seja, diferente do algoritmo RSA, este algoritmo n√£o pode ser utilizado para realizar trocas de chaves ou ainda para cifragem.


Criptografia de Curvas El√≠pticas 
Devido as propriedades robusta do algoritmo RSA ele tornou-se uma tend√™ncia de mercado, atualmente uma grande parte dos produtos e padr√µes que utilizam criptografia de chave p√∫blica ou ainda assinaturas digitais acabam optando por utilizar o algoritmo RSA. Observasse que isto s√≥ foi poss√≠vel porque o algoritmo permite utilizar chaves com tamanho vari√°vel. Para manter a robustez do algoritmo em termos de seguran√ßa, o comprimento das chaves em bits vem sendo ampliado. Contudo, isto reflete em uma carga maior de processamento em rela√ß√£o as aplica√ß√µes que utilizam o algoritmo RSA. 

Este problema possui alguns desdobramentos, em destaque servi√ßos disponibilizados na web que realizam um n√∫mero expressivo de transa√ß√µes seguras por segundo, por exemplo sites de com√©rcio eletr√¥nico. Neste sentido, uma abordagem promissora foi desenvolvida para concorrer com o algoritmo RSA, a criptografia de curvas el√≠pticas. Conhecida tamb√©m como ECC, acr√¥nimo do termo ingl√™s (Elliptic Curve Cryptography). Existem algumas iniciativas para tornar as curvas el√≠pticas em um padr√£o, incluindo o padr√£o de criptografia de chave p√∫blica, o Standard for Public-Key Cryptography P1363 do IEEE (Institute of Electrical and Electronics Engineers).   

Uma das principais vantagens da curva el√≠ptica em rela√ß√£o a RSA √© que ela prop√µe uma seguran√ßa equivalente para um comprimento de bits bem menor, caracter√≠stica que permite reduzir o custo computacional. Em contrapartida, apesar da teoria das curvas el√≠pticas terem sido concebidas h√° algum tempo, apenas recentemente com a ado√ß√£o de alguns produtos come√ßaram a ser exploradas. Consequentemente, despertando o interesse criptoanal√≠tico, visando encontrar suas fraquezas. Deste modo, podemos inferir que o n√≠vel de confian√ßa das curvas el√≠pticas ainda √© inferior quando comparado com um algoritmo RSA. 


Aplica√ß√µes de Chave P√∫blica 
Os algoritmos de chave p√∫blica s√£o utilizados em diversas aplica√ß√µes. Em geral, essas aplica√ß√µes s√£o basicamente categorizadas em duas frentes: assinatura digital; e abordagens de gerenciamento e distribui√ß√£o de chaves.  

Relacionado ao processo de gerenciamento e distribui√ß√£o de chaves, alguns fatores fundamentais relacionados √† criptografia de chave p√∫blica devem ser levados em considera√ß√£o: 

Estabelecer um processo para distribui√ß√£o segura das chaves p√∫blicas. 

Utilizar a criptografia de chave p√∫blica para fornecer um m√©todo para distribui√ß√£o das chaves secretas. 

Utilizar a criptografia de chave p√∫blica para fornecer chaves tempor√°rias para serem usadas na cifra√ß√£o de mensagens. 

 

As aplica√ß√µes de chave p√∫blica apresentadas nesta se√ß√£o, fornecem uma vis√£o geral das assinaturas digitais e alguns exemplos de aplica√ß√µes do processo de gest√£o e distribui√ß√£o de chaves. 


Assinatura Digital 
A criptografia de chave p√∫blica pode ser utilizada como ferramenta de autentica√ß√£o, observe a representa√ß√£o exposta na figura abaixo:  


Fonte: Autor
Supondo que Alice necessite enviar uma mensagem para Bob. Considerando que a mensagem n√£o possui car√°ter confidencial, ou seja, preservar o sigilo da mensagem n√£o √© um requisito importante. Por√©m, Alice quer garantir que Bob tenha certeza de que a mensagem foi enviada por ela. 

Visando garantir a autenticidade, Alice utiliza uma fun√ß√£o hash criptogr√°fica segura, como algoritmo SHA-512, gerando um valor hash para sua mensagem. Posteriormente cifra o c√≥digo hash com sua chave privada, concebendo uma assinatura digital. Ent√£o, Alice transmite a mensagem com a assinatura digital anexada. Quando Bob recebe a mensagem encaminhada por Alice ele consegue certificar a origem da mensagem por meio da assinatura digital, para isto Bob deve realizar o seguinte processo: 

Calcular o valor do hash da mensagem; 

Decifrar a assinatura utilizando a chave p√∫blica de Alice; 

Comparar o c√≥digo hash obtido com o c√≥digo hash disposto na mensagem decifrada. 

 

Caso ambos os c√≥digos hash forem id√™nticos, Bob consegue ter certeza de que a mensagem foi assinada com a chave privada de Alice. Sendo que ningu√©m mais al√©m de Alice possui sua chave privada, ningu√©m mais poderia ter cifrado o texto que foi decifrado utilizando a chave p√∫blica de Alice. Ainda, destaca-se que seria imposs√≠vel modificar a mensagem sem ter posse da chave privada de Alice, esta propriedade permite autenticar a mensagem, primeiro determinar sua origem, por conseguinte garantir a integridade dos dados transmitidos. 

√â importante destacar que assinatura digital n√£o fornece confidencialidade. Em outras palavras, a mensagem que est√° sendo transmitida permite garantir que n√£o sofreu nenhuma altera√ß√£o, por√©m n√£o garante que uma terceira parte tenha acesso ao conte√∫do da mensagem. 


Certificados de Chave P√∫blica 
Analisando a criptografia de chave p√∫blica, uma caracter√≠stica exclusiva √© dispor da chave p√∫blica, onde a chave pode ser distribu√≠da publicamente sem nenhum preju√≠zo. Deste modo, na utiliza√ß√£o de um algoritmo de chave p√∫blica, tal como o RSA, qualquer usu√°rio pode disponibilizar sua chave p√∫blica para outros usu√°rios. Apesar desta abordagem ser oportuna, ela possui certas limita√ß√µes: qualquer indiv√≠duo pode falsificar um comunicado p√∫blico, isto √©, um indiv√≠duo mal-intencionado pode se passar pela Alice e enviar uma chave p√∫blica a outros participantes, o ainda divulgar a chave p√∫blica de forma "aberta" (disponibilizar publicamente). Enquanto Alice n√£o descobrir a farsa e conseguir alertar os participantes, o advers√°rio conseguir√° ter acesso ao conte√∫do de todas as mensagens cifradas que foram enviadas, ainda pode utilizar as chaves falsificadas para conceber a autentica√ß√£o. 

A ideia do certificado consiste em utilizar uma chave p√∫blica associado ao identificador do propriet√°rio da chave em conjunto com um bloco inteiro assinado por uma terceira parte, uma entidade confi√°vel. Em geral, esta terceira entidade corresponde a autoridade certificadora na qual a comunidade tem absoluta confian√ßa. A autoridade certificadora tamb√©m √© conhecida como CA (Certification Authority). √â bastante comum que uma CA seja uma ag√™ncia governamental ou uma institui√ß√£o financeira. Para validar um certificado al√©m da informa√ß√£o da CA √© necess√°rio fornecer o per√≠odo de validade do certificado. Um usu√°rio pode solicitar um certificado assinado pela CA dispondo da sua chave p√∫blica de forma segura. Posteriormente, este usu√°rio pode publicar o certificado. Deste modo, quem precisar utilizar a chave p√∫blica do usu√°rio poder√° obter o certificado e consultar se ele √© v√°lido, verificando se a assinatura anexada √© confi√°vel. A figura exposta abaixo demonstra este processo. 


Fonte: Autor
Para formatar os certificados de chave p√∫blica foi adotado um padr√£o universal, o X.509. Os certificados X.509 s√£o utilizados na grande maioria das aplica√ß√µes de seguran√ßa em rede. Tais aplica√ß√µes incluem protocolos bastante conhecidos como o IPsec (IP Security), TLS (Transport Layer Security), SSH (Secure Shell) e S/MIME (Secure / Multipurpose Internet Mail Extension).    

CURIOSIDADE
IPsec - √© um protocolo de comunica√ß√£o segura na internet utilizado para tunelamento, criptografia e autentica√ß√£o.
S/MIME - √© um protocolo amplamente aceito para enviar mensagens assinadas digitalmente e criptografadas.

Distribui√ß√£o de Chave Sim√©trica Usando Criptografia de Chave P√∫blica
Conforme mencionado, um requisito fundamental da cifra√ß√£o sim√©trica para possibilitar uma comunica√ß√£o segura entre duas partes √© que elas devem compartilhar uma chave secreta. Para exemplificar, imagine que Alice deseja criar uma aplica√ß√£o de envio de mensagens. A aplica√ß√£o deve possibilitar a troca de e-mail de forma segura na internet ou uma rede privada que seja compartilhada entre duas partes. Alice quer utilizar criptografia sim√©trica na sua aplica√ß√£o. Utilizando a criptografia sim√©trica, para que Alice estabele√ßa uma comunica√ß√£o segura com alguns dos seus contatos, ela deve encontrar uma maneira segura de compartilhar a chave secreta para que nenhum indiv√≠duo indesejado tenha acesso ao conte√∫do das mensagens.  

Digamos que Alice precisa compartilhar a chave secreta com Bob. Dado as restri√ß√µes da localiza√ß√£o f√≠sica isto pode ser tornar um desafio. Alice poderia cifrar a chave utilizando a criptografia sim√©trica e posteriormente enviar a chave criptografada por e-mail para Bob, por√©m isto requer que Alice e Bob j√° possuam uma chave secreta compartilhada entre eles. Ainda, ressalta-se que todos os demais contatos que desejam utilizar o novo aplicativo ir√£o enfrentar esta mesma situa√ß√£o, cada par de correspondente (emissor e receptor) dever√£o compartilhar uma chave secreta √∫nica e exclusiva.  

Uma das estrat√©gias √© adotar o m√©todo de troca de chaves Diffie-Hellman. Esta √© uma abordagem amplamente utilizada, contudo possui uma limita√ß√£o, na implementa√ß√£o mais simples do algoritmo de Diffie-Hellman n√£o √© fornecido qualquer tipo de mecanismo de autentica√ß√£o entre as duas partes comunicantes. Algumas varia√ß√µes do algoritmo de Diffie-Hellman j√° tratam este problema. Adicionalmente, tamb√©m existem alguns protocolos que utilizam criptografia de chave p√∫blica para este mesmo prop√≥sito. 


Envelopes Digitais 
Os envelopes digitais s√£o um outro tipo de aplica√ß√£o que envolve o uso de criptografia de chave p√∫blica. O conceito do envelope digital √© o de proteger uma mensagem sem a necessidade de que o emissor e o receptor compartilhem a mesma chave secreta. Esta t√©cnica seria o equivalente ao criar um envelope selado, por√©m cont√©m uma carta que n√£o foi assinada. A representa√ß√£o da abordagem √© apresentada na figura abaixo.   


Fonte: Autor
Imagine que Alice deseja encaminhar uma mensagem confidencial para Bob, contudo eles n√£o possuem uma chave secreta sim√©trica compartilhada entre eles. Deste modo, Alice pode prosseguir da seguinte forma: 

Estrutura a mensagem. 

Cria uma chave sim√©trica aleat√≥ria tempor√°ria (dever√° ser utilizada somente uma vez). 

Efetua a cifragem da mensagem utilizando criptografia sim√©trica com a chave secreta que dever√° ser usada uma √∫nica vez.   

Realiza a cifragem da chave secreta de uso √∫nico utilizando a criptografia assim√©trica com a chave p√∫blica de Bob. 

Por fim, anexa na mensagem a chave secreta (uso √∫nico) que est√° cifrada, ent√£o envia a mensagem cifrada para Alice. 

Deste modo, apenas Bob conseguir√° decifrar a mensagem contendo a chave de uso √∫nico, necess√°ria para decifrar a mensagem original. Destaca-se que se Alice conseguiu a chave p√∫blica de Bob por meio do certificado de chave p√∫blica de Bob, ent√£o ela ter√° certeza de que esta chave p√∫blica √© v√°lida. 


Cifra√ß√£o/Decifra√ß√£o 
Os algoritmos de criptografia de chave p√∫blica utilizam sempre um par de chaves relacionadas, contudo distintas, uma das chaves utilizada para cifrar e outra por sua vez para decifrar. Destaca-se, que a chave utilizada para decifrar n√£o pode ser obtida a partir da an√°lise da chave de cifragem. Nos algoritmos de chave p√∫blica, as chaves s√£o criadas sempre em pares: uma para cifrar e a outra para decifrar. 

Conforme j√° discutido, a chave utilizada para cifrar a mensagem √© denominada chave p√∫blica, esta chave pode ser divulgada para o transmissor da mensagem. Em contrapartida, a chave utilizada para decifrar a mensagem √© conhecida como chave privada, esta chave deve ser guardada em segredo, pertencente ao receptor e n√£o deve ser divulgada. 

A caracter√≠stica fundamental do algoritmo assim√©trico √© que a chave p√∫blica pode ser distribu√≠da livremente. A chave privada √© a √∫nica maneira de decifrar uma mensagem que foi cifrada com a chave p√∫blica. Desta maneira, apenas o receptor da mensagem ser√° capaz de decifrar a mensagem de qualquer indiv√≠duo que utilize a sua chave p√∫blica para cifrar a mensagem. Assim, cada usu√°rio possui uma chave p√∫blica e outra privada. 

A figura abaixo demonstra o processo de cifragem e decifragem utilizando um algoritmo de criptografia de chave p√∫blica. Observe que na cifragem, o usu√°rio emissor utiliza a chave p√∫blica do receptor como entrada para o algoritmo de criptografia, em conjunto com o texto √†s claras. Em contrapartida, na decifragem, o receptor, ao receber a texto cifrado, utiliza a sua chave privada (chave que apenas ele deve conhecer) como entrada para o algoritmo de criptografia, como resultado obt√©m o texto √†s claras. 


Fonte: Autor
Os algoritmos de criptografia de chave p√∫blica possuem algumas limita√ß√µes em rela√ß√£o ao desempenho, porque exigem alto n√≠vel de processamento, o que os torna muito mais lentos do que os algoritmos sim√©tricos. Neste sentido, uma estrat√©gia bem interessante √© utilizar os dois tipos de algoritmos em conjunto, isto permite aproveitar os pontos fortes de cada algoritmo e reduzir os pontos fracos de ambos os tipos de criptografia.  

Ao retomar o cen√°rio de estudo do banco de T√≥quio (introduzido na Unidade 1) neste ponto, podemos enfatizar a import√¢ncia de combinar as diferentes abordagens de criptografia para obter um sistema mais seguro. O incidente no banco de T√≥quio poderia ter sido evitado se tivessem sido utilizados algoritmos de criptografias adequados ao cen√°rio do banco. O malware disseminado no banco, s√≥ conseguiu ‚Äúquebrar‚Äù as senhas dos usu√°rios do sistema de forma r√°pida, devido os sistemas utilizarem criptografia sim√©trica com tamanho de chaves de 56 bits, este fator associado com a defini√ß√£o de senhas fracas possibilitou um ataque bem-sucedido.    


Distribui√ß√£o de Chaves P√∫blica 
Existem algumas abordagens utilizando a criptografia assim√©trica projetada para fornecer um esquema de distribui√ß√£o de chaves p√∫blicas. Em geral, tais abordagens podem ser classificadas em um dos seguintes grupos: 

Diret√≥rio de chaves dispon√≠vel publicamente; 

Autoridade de chave p√∫blica (CA); 

Certificados de chave p√∫blica; 

An√∫ncio p√∫blico. 


Diret√≥rio de Chaves Dispon√≠vel Publicamente 
A estrat√©gia de utilizar um diret√≥rio din√¢mico para conceder as chaves p√∫blicas fornece um n√≠vel maior de seguran√ßa. Contudo, o processo de gerenciamento e distribui√ß√£o das chaves no diret√≥rio p√∫blico deve ser atribu√≠do a uma entidade confi√°vel de f√© p√∫blica, em geral uma institui√ß√£o governamental ou financeira. A abordagem de um diret√≥rio da distribui√ß√£o de chaves p√∫blicas √© representada na figura abaixo:   


Fonte: Autor
As etapas fundamentais s√£o demostradas as seguir:

Cada usu√°rio deve conceber um par de chaves que ser√° utilizado para o processo de cifragem e decifragem das mensagens.
O usu√°rio deve alocar uma das duas chaves em um registrador p√∫blico ou utilizar outro meio para disponibilizar esta chave, esta chave √© denominada como chave p√∫blica. A outra chave deve ser mantida em seguran√ßa, esta chave √© denominada como chave privada. Adicionalmente, cada usu√°rio mant√©m um conjunto de chaves p√∫blicas de outros usu√°rios.
Caso Alice deseje enviar uma mensagem secreta para Bob, ela cifra a mensagem utilizando a chave p√∫blica de Bob.
Quando Bob receber a mensagem, ele utiliza a chave privada para decifrar a mensagem. Destaca-se que nenhum outro indiv√≠duo conseguir√° decifrar a mensagem, pois somente Bob conhece a chave privada.
Esta abordagem fornece um n√≠vel consider√°vel de seguran√ßa, contudo ainda assim este esquema possui fraquezas. Caso um advers√°rio consiga obter acesso a chave privada da autoridade do diret√≥rio, a comunica√ß√£o entre todos os participantes estaria comprometida. O advers√°rio poderia falsificar a chave p√∫blica de qualquer um dos participantes al√©m de espionar as mensagens enviadas pelos demais participantes. Ainda, outra vulnerabilidade que o advers√°rio poderia explorar, s√£o os registros mantidos pela autoridade. 


Autoridade de Chave P√∫blica 
Um mecanismo de seguran√ßa mais forte para distribui√ß√£o de chave p√∫blica pode ser alcan√ßado com a ado√ß√£o de controles mais rigorosos no processo de distribui√ß√£o de chaves p√∫blicas utilizando um diret√≥rio. Um cen√°rio t√≠pico foi apresentado por Popek, esquematizado na figura adaptada de [Popek e Kline,1979] a seguir:  


Fonte: Adaptado de: Popek e Kline, 1979
O cen√°rio exposto considera que uma autoridade central gerencia um diret√≥rio de chaves p√∫blicas. Ainda, √© necess√°rio que cada participante tem acesso seguro a chave p√∫blica da autoridade respons√°vel, enfatizando que somente a autoridade respons√°vel deve ter acesso a chave privada correspondente. As seguintes etapas s√£o expostas por Popek: 

O usu√°rio A envia uma mensagem com timestamp √† autoridade de chave p√∫blica, solicitando a chave p√∫blica do usu√°rio B. 

A autoridade responde com uma mensagem que √© cifrada utilizando a chave privada da autoridade. Assim, o usu√°rio A √© capaz de decifra a mensagem utilizando a chave p√∫blica da autoridade. Desse modo, o usu√°rio A tem certeza de que a mensagem foi originada pela autoridade. A mensagem inclui o seguinte: 

A chave p√∫blica do usu√°rio B, que o usu√°rio A pode utilizar para cifrar a mensagens destinadas ao usu√°rio B. 

A solicita√ß√£o original, para permitir que o usu√°rio A compare essa resposta com a solicita√ß√£o anterior, verificando se a solicita√ß√£o original n√£o foi modificada antes do recebimento pela autoridade. 

O timestamp original, para que o usu√°rio A possa determinar que essa mensagem n√£o √© antiga da autoridade, contendo uma chave diferente da chave p√∫blica atual do usu√°rio B. 

O usu√°rio A armazena a chave p√∫blica do usu√°rio B utilizada para cifrar uma mensagem para o usu√°rio B, contendo um identificador do usu√°rio A e um nonce, utilizada para identificar essa transmiss√£o exclusivamente. 

O usu√°rio B obt√©m a chave p√∫blica do usu√°rio A na autoridade da mesma forma como o usu√°rio A obteve a chave p√∫blica do usu√°rio B. 

Idem as etapas realizadas pelo usu√°rio A para obter a chave (passos 1 e 2). 

 

At√© este ponto, as chaves p√∫blicas foram fornecidas com seguran√ßa ao usu√°rio A e usu√°rio B, agora eles podem iniciar a troca de mensagens de forma segura. Entretanto, duas etapas adicionais apresentadas na sequ√™ncia s√£o desejadas: 

 

O usu√°rio B envia uma mensagem ao usu√°rio A (cifrada com a chave p√∫blica do usu√°rio A) e contendo o nonce do usu√°rio A, al√©m de um novo nonce gerado pelo usu√°rio B. Como somente o usu√°rio B poderia ter decifrado a mensagem (etapa 3), a presen√ßa de primeiro nonce na mensagem (etapa 6) permite garantir ao usu√°rio A que o seu correspondente (com quem est√° trocando mensagem) √© o usu√°rio B. 

O retorno do segundo nonce cifrado, utilizando a chave p√∫blica do usu√°rio B, permite garantir ao usu√°rio B que o seu correspondente √© o usu√°rio A. 

CURIOSIDADE
Timestamp - √© um instante √∫nico de tempo que permite determinar a ocorr√™ncia de um evento.
Nonce - √© um n√∫mero arbitr√°rio que s√≥ pode ser usado uma vez.

Observe que para realizar uma comunica√ß√£o segura s√£o necess√°rios um total de troca de sete mensagens. Contudo, as primeiras quatro mensagens s√£o utilizadas com pouca frequ√™ncia, pois tanto o usu√°rio A quanto o usu√°rio B podem salvar a chave p√∫blica um do outro para utiliza√ß√£o futura, esta t√©cnica √© conhecida como caching. Devemos ressaltar, que os usu√°rios devem solicitar periodicamente c√≥pias recentes das chaves p√∫blicas de seus correspondentes, visando garantir sempre que as chaves p√∫blicas sejam atuais. 


Certificados de Chave P√∫blica 
O aumento na quantidade de usu√°rio e requisi√ß√µes realizadas na autoridade de chave p√∫blica pode ocasionar um gargalo no sistema, pois cada usu√°rio dever√° contatar a autoridade respons√°vel a fim de obter a chave p√∫blica do usu√°rio com quem pretende se comunicar. Ressalta-se que o diret√≥rio de nomes e chaves p√∫blica tamb√©m pode ser vulner√°vel √† viola√ß√£o. Como alternativa, √© poss√≠vel utilizar certificados para possibilitar que os usu√°rios troquem as chaves p√∫blicas sem a necessidade de participar a autoridade de chave p√∫blica, propondo uma maneira para realizar as trocas de chaves que seja t√£o confi√°vel quanto se a troca fosse realizada com a autoridade de chave p√∫blica. 

Observando que um certificado consiste basicamente em tr√™s partes: a chave p√∫blica, um identificador do propriet√°rio da chave (informa√ß√µes do usu√°rio), e um bloco inteiro assinado por uma autoridade certificadora. Um determinado usu√°rio pode solicitar um certificado para uma autoridade certificadora, para isto o usu√°rio deve apresentar a sua chave p√∫blica de uma forma segura. Posteriormente, o usu√°rio torna p√∫blico este certificado. Deste modo, qualquer outro usu√°rio que necessite utilizar a chave p√∫blica desse usu√°rio poder√° verificar se a chave √© v√°lida por meio da assinatura confi√°vel a ele anexado. Os demais participantes tamb√©m podem gerar seus pr√≥prios certificados junto a autoridade certificadora. Consequentemente, cada participante pode consultar se as demais chaves p√∫blicas s√£o v√°lidas verificando se o certificado foi realmente criado por uma autoridade confi√°vel. Alguns requisitos devem ser avaliados neste processo: 

Todos os participantes podem ler o certificado para validar a identidade e a chave p√∫blica do propriet√°rio do certificado; 

Todos os participantes podem verificar se um determinado certificado foi gerado pela autoridade certificadora, garantindo que o certificado n√£o foi falsificado; 

Apenas a autoridade certificadora deve criar e atualizar os certificados; 

Todos os participantes podem verificar se os certificados ainda s√£o v√°lidos. 

Para que esta abordagem seja efetiva √© necess√°rio que cada participante solicite seu certificado v√°lido junto a autoridade certificadora. Ressalta-se que esta demanda √© imprescind√≠vel que seja realizada de forma segura, feita pessoalmente ou utilizando uma comunica√ß√£o segura. 


An√∫ncio P√∫blico 
Utilizando um algoritmo de chave p√∫blica como o RSA, qualquer participante pode encaminhar sua chave p√∫blica para outro participante, ou ainda poder√° transmitir as chaves por meio de broadcast, ou seja, enviar a chave p√∫blica para todos os participantes da comunidade. Na figura a seguir √© demonstrada a distribui√ß√£o da chave p√∫blica utilizando broadcast.  


Fonte: Autor
Uma ferramenta bastante popular que utiliza o algoritmo RSA √© o PGP (Pretty Good Privacy), diversos usu√°rios adotam a pr√°tica de disponibilizar sua chave p√∫blica em anexo em posts em f√≥runs p√∫blicos apropriados. 

Apesar desta t√©cnica ser conveniente, de uma certa maneira, ela possui vulnerabilidades, pois, qualquer indiv√≠duo mal-intencionado pode falsificar este an√∫ncio p√∫blico. Para o advers√°rio seria tarefa simples, ele poderia fingir ser um determinado usu√°rio e enviar uma chave p√∫blica falsificada para outro participante ou ainda em broadcast. At√© que o usu√°rio aut√™ntico que possui aquela identidade que est√° sendo falsificada descubra a falsifica√ß√£o e avise os demais participantes, o advers√°rio j√° teve acesso as mensagens que foram enviadas cifradas para este usu√°rio, al√©m do advers√°rio poder utilizar a chave falsificada para fins de autentica√ß√£o. 


Explorando os mecanismos de criptografia sim√©trica e assim√©trica
Este v√≠deo fornecer√° uma vis√£o mais ampla sobre os mecanismos de criptografias sim√©tricos e assim√©tricos, vamos apresentar os elementos fundamentais associados a cada um dos algoritmos, quais as vantagens e desvantagens de utilizar estas abordagens, dicas e boas pr√°ticas para implementa√ß√£o destes mecanismos de seguran√ßa.



 
EXERC√çCIOExerc√≠cios de Fixa√ß√£o
Descreva com suas palavras como funciona o algoritmo de criptografia sim√©trica.

Quais os elementos fundamentais da criptografia sim√©trica?

Quais os dois requisitos necess√°rios para utiliza√ß√£o da criptografia sim√©trica de forma segura?

Quais os principais tipos de ataques direcionados a criptografia sim√©trica?

Cite 3 algoritmos de criptografia sim√©trica.

Quais os problemas relacionados a distribui√ß√£o das chaves na criptografia sim√©trica?

O que √© um KDC, e para que √© utilizado?

Qual a diferen√ßa da chave mestra e chave de sess√£o no KDC?

Descreva com suas palavras como funciona o algoritmo de criptografia assim√©trica.

Quais os elementos fundamentais da criptografia assim√©trica?

Cite 3 algoritmos de criptografia assim√©trica.

Cite 3 aplica√ß√µes para criptografia de chave p√∫blica.

Para que √© utilizado a assinatura digital?

O que √© uma CA?

Para que √© utilizado um certificado de chave p√∫blica?

Para que serve os envelopes digitais?

Quais s√£o as principais abordagens para distribui√ß√£o das chaves p√∫blicas?

Conclus√£o
Esta unidade abordou os mecanismos de criptografia sim√©trica e assim√©trica. Descobrimos que na criptografia sim√©trica o emissor e receptor compartilham a mesma chave secreta. Conforme discutido, esta chave √© utilizada tanto para cifrar como decifrar uma mensagem. Destacamos a import√¢ncia de proteger e preservar a chave secreta. Exploramos os princ√≠pios da cifra√ß√£o sim√©trica, onde foram apresentados os cinco elementos fundamentais da criptografia sim√©trica, o texto √†s claras, algoritmo de cifra√ß√£o, chave secreta, algoritmo de decifra√ß√£o e texto cifrado. Ainda, foi apresentado as principais caracter√≠sticas do algoritmo de cifra√ß√£o sim√©trica. Constatamos que o advers√°rio pode explorar duas t√©cnicas para atacar um sistema de criptografia sim√©trica, atrav√©s de um ataque de criptoan√°lise ou utilizando um ataque de for√ßa bruta, ent√£o mostramos quais as contramedidas necess√°rias.   

Por conseguinte, apresentamos os principais algoritmos de criptografia sim√©trica adotados como padr√£o pelo NIST, o algoritmo DES, Triplo DES e AES. Demonstramos a evolu√ß√£o dos algoritmos de criptografia sim√©trica e as limita√ß√µes de cada algoritmo. Ainda, mostramos que o tamanho da chave secreta utilizada para cifrar uma mensagem reflete no tempo necess√°rio para "quebrar" a mensagem que foi cifrada com essa chave. Enfatizamos a import√¢ncia de proteger e armazenar corretamente a chave secreta. De acordo com o que estudamos, uma das grandes limita√ß√µes da criptografia sim√©trica √© justamente a distribui√ß√£o das chaves secretas. Discutimos o cuidado que devemos ter para compartilhar esta chave de maneira segura. Conforme estudamos o KDC √© considerado a melhor op√ß√£o para compartilhar a chave secreta na rede. Adicionalmente, abordamos a hierarquia de chaves necess√°ria para troca de chaves utilizando o KDC. 

Exploramos tamb√©m a criptografia de chave p√∫blica, as principais caracter√≠sticas e os elementos fundamentais deste mecanismo. Conforme discutido, verificamos que a criptografia assim√©trica trabalha com um par de chaves, uma chave p√∫blica e a outra privada. Verificamos que um texto cifrado com uma das chaves somente poder√° ser decifrado pela outra chave correspondente. Descobrimos que a chave privada √© exclusiva do propriet√°rio, n√£o deve ser divulgada, apenas ele deve ter acesso a esta chave. Por sua vez, a chave p√∫blica pode ser distribu√≠da para os participantes. Adicionalmente, apresentamos os principais algoritmos de criptografia de chave p√∫blica, o algoritmo RSA, Diffie-Hellman, DSS e as Curvas el√≠pticas. Entre as aplica√ß√µes de criptografia, mostramos como √© estruturado os algoritmos assinatura digital, autentica√ß√£o de mensagens, certificados de chave p√∫blica, envelopes digitais, e outras aplica√ß√µes.  

Por fim, demonstramos vulnerabilidades que os advers√°rios podem explorar, associadas ao uso dos mecanismos de criptografia, mas sobretudo as estrat√©gias e boas pr√°ticas para contorn√°-las. Descobrimos as vantagens e desvantagens de utilizar as criptografias sim√©trica e assim√©trica. Discutimos sobre os desafios do profissional de seguran√ßa da informa√ß√£o para implementar tais mecanismos. Deste modo, demonstramos como podemos combinar diferentes algoritmos de criptografia para propor um cen√°rio de seguran√ßa mais robusto e adequado ao contexto de cada organiza√ß√£o. 


https://www.youtube.com/watch?v=wpUzPiKyt0M
https://www.youtube.com/watch?v=I9qNbpFkunA


Refer√™ncias Bibliogr√°ficas 
DIFFIE, W. The First Ten Years of Public-Key Cryptography. Proceedings of the IEEE, mai. de 1988. 

LEUTWYLER, K. Superhack. Scientific American, jul. 1994. 

NIST. FIPS PUB 171 - Federal Information Processing Standards Publication. National Institute of Standards and Technology (NIST), 1992. Dispon√≠vel em: <https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf>. Acesso em: 21 de jul. de 2021. 

NIST. FIPS PUB 186 - Federal Information Processing Standards Publication. National Institute of Standards and Technology (NIST), 1994. Dispon√≠vel em: <https://nvlpubs.nist.gov/nistpubs/Legacy/FIPS/fipspub186.pdf>. Acesso em: 21 de jul. de 2021. 

NIST. FIPS PUB 197 - Federal Information Processing Standards Publication. National Institute of Standards and Technology (NIST), 2001. Dispon√≠vel em: <https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf>. Acesso em: 21 de jul. de 2021. 

NIST. FIPS PUB 46 - Federal Information Processing Standards Publication. National Institute of Standards and Technology (NIST), 1988. Dispon√≠vel em: <https://csrc.nist.gov/CSRC/media/Publications/fips/46/1/archive/1988-01-22/documents/NBS.FIPS.46-1.pdf>. Acesso em: 21 de jul. de 2021. 

NIST. FIPS PUB 46-2 - Federal Information Processing Standards Publication. National Institute of Standards and Technology (NIST), 1993. Dispon√≠vel em: <https://nvlpubs.nist.gov/nistpubs/Legacy/FIPS/fipspub46-2.pdf>. Acesso em: 21 de jul. de 2021. 

NIST. FIPS PUB 46-3 - Federal Information Processing Standards Publication. National Institute of Standards and Technology (NIST), 1999. Dispon√≠vel em: <https://csrc.nist.gov/csrc/media/publications/fips/46/3/archive/1999-10-25/documents/fips46-3.pdf>. Acesso em: 21 de jul. de 2021. 

POPEK, G.; KLINE, C. Encryption and Secure Computer Networks. ACM Computing Surveys, dez 1979. 

RIVEST, R. SHAMIR, A. ADLEMAN, L. A Method for Obtaining Digital Signatures and Public Key Cryptosystems. Communications of the ACM, fev. 1978. 

STALLINGS, William. Criptografia e Seguran√ßa de Redes: Princ√≠pios e Pr√°ticas. S√£o Paulo: Pearson Prentice Hall, 2008. 

STALLINGS, William; BROWN, Lawrie. Seguran√ßa de computadores: princ√≠pios e pr√°ticas. Rio de Janeiro: Elsevier Campus, 2014. 


 